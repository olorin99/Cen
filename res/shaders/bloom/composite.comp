#version 460

#include "canta.glsl"
#include "cen.glsl"

declareStorageImagesFormat(storageImages, image2D, readonly, rgba32f);
declareStorageImages(storageImagesOutput, image2D, writeonly);

layout (push_constant) uniform PushData {
    GlobalDataRef globalDataRef;
    int upsampleIndex;
    int hdrIndex;
    int outputIndex;
    int mipCount;
};

layout (local_size_x = 32, local_size_y = 32) in;
void main() {
    ivec2 globCoords = ivec2(gl_GlobalInvocationID.xy);

    ivec2 upsampleSize = imageSize(storageImages[upsampleIndex]);
    ivec2 hdrSize = imageSize(storageImages[hdrIndex]);
    ivec2 outputSize = imageSize(storageImagesOutput[outputIndex]);

    if (any(greaterThanEqual(globCoords, outputSize)))
        return;

    vec4 upsample = imageLoad(storageImages[upsampleIndex], globCoords) / mipCount;
    vec4 hdr = imageLoad(storageImages[hdrIndex], globCoords);

    vec4 result = mix(hdr, upsample, globalDataRef.globalData.bloomStrength);

    imageStore(storageImagesOutput[outputIndex], globCoords, result);
}
